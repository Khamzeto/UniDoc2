'use client';

import { useEffect, useState } from 'react';
import { useRouter } from 'next/navigation'; // –î–ª—è –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–æ—Å–ª–µ –≤—ã—Ö–æ–¥–∞
import {
  IconChartBar,
  IconClipboardList,
  IconFileText,
  IconForms,
  IconLogout,
  IconNotification,
  IconPlus,
  IconSearch,
  IconTemplate,
  IconUserPlus,
  IconUsers,
} from '@tabler/icons-react';
import {
  ActionIcon,
  Badge,
  Button,
  Code,
  Group,
  rem,
  Text,
  TextInput,
  Tooltip,
  UnstyledButton,
} from '@mantine/core';
import $api from '../api/axiosInstance'; // –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º API –¥–ª—è –∑–∞–ø—Ä–æ—Å–æ–≤
import { UserButton } from '../UserButton/UserButton';
import classes from './NavbarSearch.module.css';

export function NavbarMobile() {
  const [role, setRole] = useState(null); // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ä–æ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  const router = useRouter(); // –î–ª—è –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è

  // –ü–æ–ª—É—á–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –µ–≥–æ —Ä–æ–ª—å –∏–∑ localStorage
  useEffect(() => {
    const storedUser = JSON.parse(localStorage.getItem('user'));
    if (storedUser && storedUser.role) {
      setRole(storedUser.role);
    } else {
      handleLogout(); // –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç –≤ localStorage, –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –≤—Ö–æ–¥–∞
    }
  }, []);

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤—ã—Ö–æ–¥–∞
  const handleLogout = () => {
    localStorage.removeItem('token');
    localStorage.removeItem('user');
    router.push('/auth'); // –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –≤—Ö–æ–¥–∞
  };

  // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Å—Å—ã–ª–∫–∏ –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ä–æ–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  const getLinksByRole = (role) => {
    switch (role) {
      case 'student':
      case 'teacher':
        return [
          { icon: IconNotification, label: '–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è', notifications: 4, path: '/notification' },
          { icon: IconFileText, label: '–ó–∞–ø—Ä–æ—Å –¥–æ–∫—É–º–µ–Ω—Ç–∞', path: '/document-request' },
          { icon: IconClipboardList, label: '–ú–æ–∏ –∑–∞—è–≤–ª–µ–Ω–∏—è', path: '/my-requests' },
        ];
      case 'dean':
        return [
          { icon: IconNotification, label: '–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è', notifications: 4, path: '/notification' },
          { icon: IconTemplate, label: '–°–æ–∑–¥–∞–Ω–∏–µ —à–∞–±–ª–æ–Ω–∞', path: '/create-template' },
          { icon: IconForms, label: '–ó–∞—è–≤–∫–∏', path: '/signature-requests' },
          { icon: IconUserPlus, label: '–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π', path: '/add-user' },
        ];
      case 'prorektor':
        return [
          { icon: IconNotification, label: '–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è', notifications: 4, path: '/notification' },
          { icon: IconTemplate, label: '–°–æ–∑–¥–∞–Ω–∏–µ —à–∞–±–ª–æ–Ω–∞', path: '/create-template' },
          { icon: IconUserPlus, label: '–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π', path: '/add-user' },
        ];
      case 'admin':
        return [
          { icon: IconNotification, label: '–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è', notifications: 4, path: '/notification' },
          { icon: IconFileText, label: '–ó–∞–ø—Ä–æ—Å –¥–æ–∫—É–º–µ–Ω—Ç–∞', path: '/document-request' },
          { icon: IconUsers, label: '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏', path: '/users' },
          { icon: IconChartBar, label: '–ê–Ω–∞–ª–∏—Ç–∏–∫–∞', path: '/analytics' },
          { icon: IconUserPlus, label: '–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π', path: '/add-user' },
          { icon: IconTemplate, label: '–°–æ–∑–¥–∞–Ω–∏–µ —à–∞–±–ª–æ–Ω–∞', path: '/create-template' },
        ];
      default:
        return [];
    }
  };

  // –ö–æ–ª–ª–µ–∫—Ü–∏–∏ —Å —ç–º–æ–¥–∑–∏ –∏ –æ–ø–∏—Å–∞–Ω–∏—è–º–∏
  const collections = [
    { emoji: 'üìö', label: '–ö—É—Ä—Å—ã' },
    { emoji: 'üéì', label: '–í—ã–ø—É—Å–∫' },
    { emoji: 'üìù', label: '–≠–∫–∑–∞–º–µ–Ω—ã' },
    { emoji: 'üèÜ', label: '–î–æ—Å—Ç–∏–∂–µ–Ω–∏—è' },
    { emoji: 'üìÖ', label: '–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ' },
    { emoji: 'üë©‚Äçüè´', label: '–ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–∏' },
    { emoji: 'üèõÔ∏è', label: '–§–∞–∫—É–ª—å—Ç–µ—Ç—ã' },
    { emoji: 'üßë‚Äçüéì', label: '–°—Ç—É–¥–µ–Ω—Ç—ã' },
    { emoji: 'üî¨', label: '–ò—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è' },
    { emoji: 'üè´', label: '–ú–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è' },
    { emoji: 'üìä', label: '–û—Ç—á–µ—Ç—ã' },
    { emoji: 'üíª', label: '–û–Ω–ª–∞–π–Ω-–æ–±—É—á–µ–Ω–∏–µ' },
  ];

  const collectionLinks = collections.map((collection) => (
    <a
      href="#"
      onClick={(event) => event.preventDefault()}
      key={collection.label}
      className={classes.collectionLink}
    >
      <span style={{ marginRight: rem(9), fontSize: rem(16) }}>{collection.emoji}</span>
      {collection.label}
    </a>
  ));

  // –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å—Å—ã–ª–æ–∫ –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ä–æ–ª–∏
  const mainLinks = getLinksByRole(role).map((link) => (
    <UnstyledButton
      key={link.label}
      className={classes.mainLink}
      onClick={() => router.push(link.path)}
    >
      <div className={classes.mainLinkInner}>
        <link.icon size={20} className={classes.mainLinkIcon} stroke={1.5} />
        <span>{link.label}</span>
      </div>
      {link.notifications && (
        <Badge size="sm" variant="filled" className={classes.mainLinkBadge}>
          {link.notifications}
        </Badge>
      )}
    </UnstyledButton>
  ));

  return (
    <nav className={classes.navbarMob}>
      <div className={classes.section}>
        <UserButton />
      </div>

      <TextInput
        placeholder="Search"
        size="xs"
        leftSection={<IconSearch style={{ width: rem(12), height: rem(12) }} stroke={1.5} />}
        rightSectionWidth={70}
        rightSection={<Code className={classes.searchCode}>Ctrl + K</Code>}
        styles={{ section: { pointerEvents: 'none' } }}
        mb="sm"
      />

      <div className={classes.section}>
        <div className={classes.mainLinks}>{mainLinks}</div>
      </div>

      <div className={classes.section}>
        <Group className={classes.collectionsHeader} justify="space-between">
          <Text size="xs" fw={500} c="dimmed">
            –ö–æ–ª–ª–µ–∫—Ü–∏–∏
          </Text>
          <Tooltip label="–°–æ–∑–¥–∞—Ç—å –∫–æ–ª–ª–µ–∫—Ü–∏—é" withArrow position="right">
            <ActionIcon variant="default" size={18}>
              <IconPlus style={{ width: rem(12), height: rem(12) }} stroke={1.5} />
            </ActionIcon>
          </Tooltip>
        </Group>
        <div className={classes.collections}>{collectionLinks}</div>
      </div>

      {/* –ö–Ω–æ–ø–∫–∞ –≤—ã—Ö–æ–¥–∞ –≤–Ω–∏–∑—É –ø–∞–Ω–µ–ª–∏ */}
      <div style={{ marginTop: '10px auto 0 auto', width: '100%' }}>
        <Button
          fullWidth
          variant="light"
          color="red"
          leftSection={<IconLogout size={16} />}
          onClick={handleLogout}
        >
          –í—ã–π—Ç–∏
        </Button>
      </div>
    </nav>
  );
}
